https://www.codingninjas.com/codestudio/problems/rat-in-a-maze-all-paths_8230705?challengeSlug=striver-sde-challenge&leftPanelTab=1

int del[5]={0,1,0,-1,0};

void solve(int i,int j,int n,vector<vector<int>>&maze,vector<vector<int>> &visited,vector<vector<int>>&ans){
  
  //undefined or covered cases
  if(i < 0 || j < 0 || i >= n || j >= n || visited[i][j] == 1 || maze[i][j] == 0){
    return;
  }
  
  //reached destination
  if(i == n-1 && j == n-1){
    vector<int> temp;
    visited[i][j] = 1;

    for(int i = 0; i < n; i++){
      for(int j = 0; j < n; j++){
        temp.push_back(visited[i][j]);
      }
    }
    
    ans.push_back(temp);

    //backtrack if it's case is done 
    visited[i][j] = 0;
    return;
  }

  visited[i][j] = 1;

  for(int k=0;k<4;k++){
    int newr=i+del[k];
    int newc=j+del[k+1];
    solve(newr,newc,n,maze,visited,ans);
  }
  visited[i][j] = 0;
}

vector<vector<int> > ratInAMaze(vector<vector<int> > &maze, int n){
  vector<vector<int>> visited(n, vector<int> (n, 0));
  vector<vector<int>> ans;
  //base case
  if(maze[0][0] == 0)
     return ans;
  solve(0, 0, n, maze, visited, ans);
  return ans;
}

TC - O(4^(n*m))
SC - O(n*m)
