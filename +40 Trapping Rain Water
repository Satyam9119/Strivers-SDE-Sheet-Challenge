https://www.codingninjas.com/codestudio/problems/trapping-rain-water_8230693?challengeSlug=striver-sde-challenge

M-1 aditya verma

// left side ka max aur right side ka max ka minimum value ko minus kardo arr[i] se
//kyunki max trap water will be left boundary or right boundary ka minimum
long getTrappedWater(long *arr, int n){
         vector<long>maxLeft(n,0),maxRight(n,0);
         maxLeft[0]=arr[0];
         maxRight[n-1]=arr[n-1];
         for(long i=1;i<n;i++){
             maxLeft[i]=max(maxLeft[i-1],arr[i]);
         }
         for(long i=n-2;i>=0;i--){
             maxRight[i]=max(maxRight[i+1],arr[i]);
         }
         long ans=0;
         for(long i=0;i<n;i++){
             ans+=min(maxLeft[i],maxRight[i])-arr[i];
         }
         return ans;
}

TC - O(N)
SC - O(N)

M-2 codestudio 

long getTrappedWater(long *arr, int n){
    long l = 0, r =n-1;
    long leftmax =0, rightmax=0;
    long totalwater=0;
    while(l<=r){
      if (arr[l] <= arr[r]) {
        if (arr[l] >= leftmax)
          leftmax = arr[l];
        else
          totalwater += leftmax - arr[l];
        l++;
      } 
      else {
        if (arr[r] >= rightmax)
          rightmax = arr[r];
        else
          totalwater += rightmax - arr[r];
        r--;
      }
    }
    return totalwater;
}
